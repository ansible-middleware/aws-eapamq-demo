---
- name: "EAP installation and configuration"
  hosts: eap
  become: yes
  collections:
    - middleware_automation.redhat_csp_download
    - middleware_automation.wildfly
    - middleware_automation.jcliff
  roles:
    - redhat_csp_download
    - jcliff
    - wildfly_install
  tasks:
    - name: "Ensures webapp {{ app.name }} has been retrieved from {{ app.url }}"
      get_url:
        url: "{{ app.url }}"
        dest: "{{ wildfly_install_workdir }}/{{ app.name }}"
    - name: "Set info app destination"
      set_fact:
        info_app_dest: "{{ wildfly_install_workdir }}/{{ app.name }}"
    - name: Set jgroups stack to TCP
      include_role:
        name: wildfly_utils
        tasks_from: jboss_cli.yml
      vars:
        query: /subsystem=jgroups/channel=ee:write-attribute(name=stack,value=tcp)
        jboss_home: /opt/jboss-eap-7.4/
    - name: "Fine tuning configuration"
      jcliff:
        wfly_home: "{{ wildfly_home }}"
        rule_file: "files/jcliff/{{ hostvars[inventory_hostname].tags.Site }}"
        timeout: 7000
        components:
          - system_properties:
            - name: JBOSS_ID
              value: "{{ inventory_hostname }}"
          - deployments:
            - name: "{{ info_app_dest | basename }}"
              path: "{{ info_app_dest }}"
          - modcluster:
              proxy:
                - name: default
                  proxies:
                    - proxy1
          - messaging_activemq:
              remote_connector:
                - name: netty-remote-broker
                  socket_binding: messaging-external-broker
              connection_factory:
                - name: activemq-ra-remote
                  connectors: netty-remote-broker
                  entries:
                    - java:/RemoteJmsXA
                    - java:jboss/RemoteJmsXA'
    - name: Create cluster node list
      set_fact:
        eap_cluster_nodes: >
          {{ eap_cluster_nodes | default([]) + [
               {
                 "name": inventory_hostname,
                 "address": 'jgroups-' + item,
                 "inventory_host": item,
                 "value": hostvars[item].ansible_default_ipv4.address | default(item)
               }
             ] }}
      loop: "{{ ansible_play_batch }}"
    - name: "copy jgroups template"
      template:
        src: "../files/jgroups-jboss-cli.j2"
        dest: "/tmp/jgroups-jboss-cli"
    - name: "Execute CLI for jgroups"
      ansible.builtin.command: >
        {{ wildfly_home + '/bin/jboss-cli.sh' }} -c --output-json --file=/tmp/jgroups-jboss-cli --controller=localhost:9990
      changed_when: false
      become: yes
      retries: 3
      delay: 5
  post_tasks:
    - name: Configure promtail
      ansible.builtin.include_role:
        name: promtail
      vars:
        promtail_job_name: eap
        promtail_logfile: "{{ wildfly_home }}/standalone/log/server.log"
        promtail_region: "{{ hostvars[inventory_hostname].placement.region }}"