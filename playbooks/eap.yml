---
- name: "EAP installation and configuration"
  hosts: eap
  become: yes
  collections:
    - middleware_automation.redhat_csp_download
    - middleware_automation.wildfly
    - middleware_automation.jcliff
  roles:
    - redhat_csp_download
    - jcliff
    - wildfly_install
  tasks:
    - name: "Ensures webapp {{ app.name }} has been retrieved from {{ app.url }}"
      get_url:
        url: "{{ app.url }}"
        dest: "{{ wildfly_install_workdir }}/{{ app.name }}"
      retries: 5
      delay: 5
    - name: "Set info app destination"
      set_fact:
        info_app_dest: "{{ wildfly_install_workdir }}/{{ app.name }}"
    - name: "Fine tuning configuration"
      jcliff:
        wfly_home: "{{ wildfly_home }}"
        timeout: 7000
        components:
          - system_properties:
            - name: JBOSS_ID
              value: "{{ inventory_hostname }}"
          - deployments:
            - name: "{{ info_app_dest | basename }}"
              path: "{{ info_app_dest }}"
    - name: Create cluster node list
      set_fact:
        eap_cluster_nodes: >
          {{ eap_cluster_nodes | default([]) + [
               {
                 "name": item,
                 "address": 'jgroups-' + item,
                 "inventory_host": hostvars[item].ansible_default_ipv4.address | default(item) + '[7600]',
                 "value": hostvars[item].ansible_default_ipv4.address | default(item)
               }
             ] }}
      loop: "{{ ansible_play_batch }}"
    - name: "copy jgroups template"
      template:
        src: "../files/jgroups-jboss-cli.j2"
        dest: "/tmp/jgroups-jboss-cli"
    - name: "Execute CLI for jgroups"
      ansible.builtin.command: >
        {{ wildfly_home + '/bin/jboss-cli.sh' }} -c --output-json --file=/tmp/jgroups-jboss-cli --controller=localhost:9990
      changed_when: false
      failed_when: "'WFLYCTL0212: Duplicate resource' not in cli_result.stdout"
      register: cli_result
      become: yes
      retries: 3
      delay: 5
      until: cli_result.rc == 0
    # - name: Create AMQ cluster node list
    #   set_fact:
    #     amq_cluster_nodes: >
    #       {{ amq_cluster_nodes | default([]) + [
    #            {
    #              "name": item,
    #              "address": 'messaging-remote-' + item,
    #              "inventory_host": item + '-connector',
    #              "value": hostvars[item].ansible_default_ipv4.address | default(item)
    #            }
    #          ] }}
    #   loop: "{{ groups['amq'] }}"
    # - name: "copy messaging template"
    #   template:
    #     src: "../files/messaging-jboss-cli.j2"
    #     dest: "/tmp/messaging-jboss-cli"
    # - name: "Execute CLI for messaging"
    #   ansible.builtin.command: >
    #     {{ wildfly_home + '/bin/jboss-cli.sh' }} -c --output-json --file=/tmp/messaging-jboss-cli --controller=localhost:9990
    #   changed_when: false
    #   failed_when: "'WFLYCTL0212: Duplicate resource' not in cli_result.stdout"
    #   register: cli_result
    #   become: yes
    #   retries: 3
    #   delay: 5
    #   until: cli_result.rc == 0
  pre_tasks:
    - name: Configure promtail
      ansible.builtin.include_role:
        name: promtail
      vars:
        promtail_job_name: eap
        promtail_logfile: "{{ wildfly_home }}/standalone/log/server.log"
        promtail_region: "{{ hostvars[inventory_hostname].placement.region }}"
  post_tasks:
    - name: Install prometheus JMX exporter
      ansible.builtin.dnf:
        name: prometheus-jmx-exporter-openjdk11
        state: present
    - name: Copy jmx exporter config
      ansible.builtin.copy:
        src: ../files/jmx-exporter-eap.yml
        dest: /opt/jboss-7.4/standalone/configuration/jmx-exporter-eap.yml
        owner: root
        group: root
        mode: 0644        